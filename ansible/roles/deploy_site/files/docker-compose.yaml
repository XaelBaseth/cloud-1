services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/certs:/etc/nginx/certs:ro
      - ./data/vhost.d:/etc/nginx/vhost.d
      - ./data/html:/usr/share/nginx/html
    environment:
      - ENABLE_IPV6=true
    networks:
      - wp-net
    restart: unless-stopped

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/certs:/etc/nginx/certs
      - ./data/vhost.d:/etc/nginx/vhost.d
      - ./data/html:/usr/share/nginx/html
    environment:
      - DEFAULT_EMAIL=admin@${WORDPRESS_DOMAIN}
      - NGINX_PROXY_CONTAINER=nginx-proxy
    depends_on:
      - nginx-proxy
    networks:
      - wp-net
    restart: unless-stopped

  db:
    image: mariadb:10.5
    container_name: wordpress-db
    environment:
     - MYSQL_ROOT_PASSWORD=${WORDPRESS_DB_PASSWORD}
     - MYSQL_DATABASE=${WORDPRESS_DB_NAME}
     - MYSQL_USER=${WORDPRESS_DB_USER}
     - MYSQL_PASSWORD=${WORDPRESS_DB_PASSWORD}
    volumes:
      - ./data/db:/var/lib/mysql
    networks:
      - wp-net
    restart: unless-stopped

  wordpress:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wordpress
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_ADMIN_NAME=${WORDPRESS_ADMIN_NAME}
      - VIRTUAL_HOST=${WORDPRESS_DOMAIN}
      - LETSENCRYPT_HOST=${WORDPRESS_DOMAIN}
      - LETSENCRYPT_EMAIL=admin@${WORDPRESS_DOMAIN}
      - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
    volumes:
      - ./data/wordpress:/var/www/html
    depends_on:
      - db
    networks:
      - wp-net
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
     - PMA_HOST=db
     - PMA_USER=${WORDPRESS_DB_USER}
     - PMA_PASSWORD=${WORDPRESS_DB_PASSWORD}
    ports:
      - "8080:80"  # Acc√®s via http://<ton_ip>:8080
    networks:
      - wp-net
    restart: unless-stopped

  duckdns-updater:
    image: linuxserver/duckdns
    container_name: duckdns
    environment:
      - SUBDOMAINS="42lh-cloud-1"
      - TOKEN=${DUCKDUCKDNS_TOKEN} 
      - TZ=Europe/Paris
    restart: unless-stopped
    networks:
      - wp-net

networks:
  wp-net:
    driver: bridge
